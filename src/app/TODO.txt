TODO: best IDE for modern javascript development?

each Angular Module should have its own routing
NgModuel is the unit of reusability


TODO: How does Angular lazy loading works?
How does ahead of time (AOT) compilation works? and how does it affect performance?
See https://angular.io/guide/aot-compiler

TODO: How does @injectable works?
See https://toddmotto.com/angular-decorators

TODO: How does Decorators injectable works?

TODO: What is @Input for? 
build a component which utilizes that

Note about importing angular modules:
- when you import module because of services, you that only ONCE, in the main module.
- if you import it because of template-related things, then you need to import it in EACH module, where it is used.
- Avoid importing service modules more then once. It may lead to errors and degrade performance.
- services provided in lazy-loaded module, will be available only in that module. Because they became part of diferent bundle. 

What is BrowserModule and its variants for server?

What is a difference between Directive and Component?
It seems that directive is for attributes only?
component is a special-case of directive.
Directive can be attached to another directive and it should be highly reusable. 
Components force isolated scope and encourage one-way binding. Component also uses Shadow DOM.
@View or TemplateUrl is mandatory for a Component. 
While Directive only modifies of add functionality of existing elements.


TODO: Learn more about Shadow DOM. 







-----------------------------------------
Decorators:

- Class decorators, e.g. @Component and @NgModule
- Property decorators for properties inside classes, e.g. @Input and @Output
- Method decorators for methods inside classes, e.g. @HostListener
- Parameter decorators for parameters inside class constructors, e.g. @Inject




